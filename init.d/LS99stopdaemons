#!/system/xbin/bash

LOGFILE=$1

. /etc/init.d/googlewiz.sh

waitforsdcard $LOGFILE

TB=/system/bin/toybox

dostop () {
    echo "-- stopping daemon: $1 ($2)" | tee -a $LOGFILE
    $TB stop "$1"
}

echo "-- sleeping for an additional 25 seconds" | tee -a $LOGFILE
sleep 25

CNT=0

declare -A dmap

# stop services but only if the corresponding binaries/daemons still exist
# (so if they were not moved to .orig by the prepit script)

# basic
BASIC=yes
if [ "$BASIC" = "yes" ]; then
    dmap[tombstoned]=/system/bin/tombstoned
    dmap[vendor.tftp_server]=/vendor/bin/tftp_server
    dmap[wifidisplayhalservice]=/vendor/bin/wifidisplayhalservice
    dmap[vendor.wifilearner]=/vendor/bin/wifilearner
    dmap[vendor.ipacm]=/vendor/bin/ipacm
    dmap[cnss-daemon]=/vendor/bin/cnss-daemon
    dmap[soter-1-0]=/vendor/bin/hw/vendor.qti.hardware.soter@1.0-service
    dmap[vendor.atfwd]=/vendor/bin/ATFWD-daemon
    dmap[qvrd]=/system/bin/qvrservice
    dmap[vendor.imsqmidaemon]=/vendor/bin/imsqmidaemon
    dmap[vendor.imsdatadaemon]=/vendor/bin/imsdatadaemon
    dmap[vendor.imsrcsservice]=/vendor/bin/imsrcsd
    dmap[vendor.ims_rtp_daemon]=/vendor/bin/ims_rtp_daemon
    dmap[vendor.dataadpl]=/vendor/bin/adpl
    dmap[vendor.vppservice]=/vendor/bin/vppservice
fi

# experimental
EXPERIMENTAL=yes
if [ "$EXPERIMENTAL" = "yes" ]; then
    dmap[vendor.per_proxy]=/vendor/bin/pm-proxy
    dmap[vendor.memtrack-hal-1-0]=/vendor/bin/hw/android.hardware.memtrack\@1.0-service
    dmap[faceulnative]=/vendor/bin/hw/vendor.oneplus.faceunlock.hal\@1.0-service
    dmap[wigighalsvc]=/vendor/bin/wigighalsvc
    dmap[seccam-1-0]=/vendor/bin/hw/vendor.qti.hardware.seccam\@1.0-service-qti
    dmap[dms-hal-1-0]=/vendor/bin/hw/vendor.dolby.hardware.dms\@1.0-service
    dmap[oneplus.engineer-1-0]=/vendor/bin/hw/vendor.oneplus.engnative.engineer\@1.0-service
    dmap[vendor.atrace-hal-1-0]=/vendor/bin/hw/android.hardware.atrace\@1.0-service
    dmap[oneplus_wifi_service]=/vendor/bin/hw/vendor.oneplus.hardware.wifi\@1.0-service
    dmap[vendor-factory-hal-1-0]=/vendor/bin/hw/vendor.qti.hardware.factory\@1.0-service
    dmap[neuralnetworks_hal_service]=/vendor/bin/hw/android.hardware.neuralnetworks\@1.2-service-qti
    dmap[oneplus_brain_service]=/vendor/bin/hw/vendor.oneplus.hardware.brain\@1.0-service
    dmap[OPNetlinkService]=/vendor/bin/OPNetlinkService
    dmap[wfdvndservice]=/vendor/bin/wfdvndservice
    dmap[mlid]=/vendor/bin/mlid
    dmap[loc_launcher]=/system/vendor/bin/loc_launcher
    dmap[gpu]=/system/bin/gpuservice
    dmap[perf-hal-2-0]=/vendor/bin/hw/vendor.qti.hardware.perf\@2.0-service
fi

# tombstones is for getting a stack trace from a running process
# tftp_server: removing the binary causes wifi not to work looks like something to do with modem firmware, runs at boot time and then seems to idle, so stopping it after the timeout of 25 secs
# wifidisplayhalservice: this is for remote displays?
# wifilearner: learning about wifi quality?
# ipacm: some network/routing/firewall/tethering stuff by qualcomm (l2tp protocol?)
# cnss-daemon: needs to run at boot (otherwise no wifi)
# soter: security related protocol (related to wechat mobile payments)?
# ATFWD: display mirroring from qualcomm (miracast?)
# qvrd: something for camera ... does not seem very useful
# next 4 are related to VoLTE: vendor.imsqmidaemon, vendor.imsdatadaemon, vendor.imsrcsservice, vendor.ims_rtp_daemon
# dpmQmiMgr: unclear what this is ... if stopped there is a 1 sec repeating message in the logcat
# dataadpl: not sure what this is
# vppservice: something with video post processing???

# /vendor/bin/hw/vendor.oneplus.hardware.translation\@1.0-service should NOT be stopped, needed for camera
# vendor.per_mgr (pm-service) is needed to handle SIM card and mobile connection

for sv in "${!dmap[@]}"; do
    if [ -e "${dmap[$sv]}" ]; then
        dostop $sv "${dmap[$sv]}"
        CNT=$(( $CNT + 1 ))
    else
        echo "-- file ${dmap[$sv]} does not exist, no action" | tee -a $LOGFILE
    fi
done

echo "-- stopped $CNT daemons in total" | tee -a $LOGFILE
