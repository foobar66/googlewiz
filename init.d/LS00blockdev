#!/system/bin/sh

LOGFILE=$1

. /etc/init.d/googlewiz.sh

BLOCKTWEAKS=true
if [ "$BLOCKTWEAKS" = true ]; then 
    echo "-- block device tweaks" | tee -a $LOGFILE
    for S in $(ls -d /sys/block/sd* 2>/dev/null); do
        sysset 0 $S/queue/rotational
        sysset 0 $S/queue/iostats
        # next one fails on write (default is 0 anyway)
        # sysset 0 $S/queue/io_poll
        sysset 1 $S/queue/rq_affinity
        sysset 256 $S/queue/nr_requests
        # By default (0) all merges are enabled.
        # When set to 1 only simple one-hit merges will be tried.
        # When set to 2 no merge algorithms will be tried.
        sysset 1 $S/queue/nomerges
        sysset cfq $S/queue/scheduler
        sysset 0 $S/queue/add_random
        sysset 0 $S/queue/discard_max_bytes
        sysset 0 $S/bdi/min_ratio
        sysset 100 $S/bdi/max_ratio
    done
else
    echo "-- not applying block device tweaks (BLOCKTWEAKS=false)" | tee -a $LOGFILE
fi
    
#========================================================
# added 20200202, CFQ tweaks

CFQTWEAKS=true
if [ "$CFQTWEAKS" = true ]; then 
    echo "-- applying CFQ tweaks" | tee -a $LOGFILE
    for S in `ls -d /sys/block/sd* 2>/dev/null`; do
        sysset 4 $S/queue/iosched/quantum
        sysset 80 $S/queue/iosched/fifo_expire_sync
        sysset 330 $S/queue/iosched/fifo_expire_async
        sysset 12582912 $S/queue/iosched/back_seek_max
        sysset 1 $S/queue/iosched/back_seek_penalty
        sysset 60 $S/queue/iosched/slice_sync
        sysset 50 $S/queue/iosched/slice_async
        sysset 2 $S/queue/iosched/slice_async_rq
        sysset 0 $S/queue/iosched/slice_idle
        # Enable CFQ group idle mode to improve scheduling effectiveness:
        # merges IO queues in a "unified group" instead  of using them as individual queues
        sysset 2 $S/queue/iosched/group_idle
        # Disable CFQ low latency mode for overall increased IO based scheduling throughput
        sysset 0 $S/queue/iosched/low_latency
    done
else
    echo "-- not applying CFQ tweaks (CFQTWEAKS=false)" | tee -a $LOGFILE
fi

#========================================================

SCSITWEAKS=true
if [ "$SCSITWEAKS" = true ]; then 
    echo "-- applying scsi disk tweaks" | tee -a $LOGFILE
    for i in $(ls /sys/class/scsi_disk); do
        sysset 'temporary none' /sys/class/scsi_disk/$i/cache_type
    done
else
    echo "-- not applying scsi disk tweaks (SCSITWEAKS=false)" | tee -a $LOGFILE
fi
