syntax = "proto2";
import "nanopb.proto";
enum sns_interrupt_msgid
{
  option (nanopb_enumopt).long_names = false;
  SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REQ = 512;
  SNS_INTERRUPT_MSGID_SNS_IBI_REQ = 514;
  SNS_INTERRUPT_MSGID_SNS_INTERRUPT_EVENT  = 1024;
  SNS_INTERRUPT_MSGID_SNS_INTERRUPT_REG_EVENT = 1025;
  SNS_INTERRUPT_MSGID_SNS_INTERRUPT_IS_CLEARED = 513;
}
enum sns_interrupt_trigger_type
{
  option (nanopb_enumopt).long_names = false;
  SNS_INTERRUPT_TRIGGER_TYPE_RISING = 0;      
  SNS_INTERRUPT_TRIGGER_TYPE_FALLING = 1;     
  SNS_INTERRUPT_TRIGGER_TYPE_DUAL_EDGE = 2;   
  SNS_INTERRUPT_TRIGGER_TYPE_HIGH = 3;        
  SNS_INTERRUPT_TRIGGER_TYPE_LOW = 4;         
}
enum sns_interrupt_drive_strength
{
  option (nanopb_enumopt).long_names = false;
  SNS_INTERRUPT_DRIVE_STRENGTH_2_MILLI_AMP = 0;  
  SNS_INTERRUPT_DRIVE_STRENGTH_4_MILLI_AMP = 1;  
  SNS_INTERRUPT_DRIVE_STRENGTH_6_MILLI_AMP = 2;  
  SNS_INTERRUPT_DRIVE_STRENGTH_8_MILLI_AMP = 3;  
  SNS_INTERRUPT_DRIVE_STRENGTH_10_MILLI_AMP = 4; 
  SNS_INTERRUPT_DRIVE_STRENGTH_12_MILLI_AMP = 5; 
  SNS_INTERRUPT_DRIVE_STRENGTH_14_MILLI_AMP = 6; 
  SNS_INTERRUPT_DRIVE_STRENGTH_16_MILLI_AMP = 7; 
}
enum sns_interrupt_pull_type
{
  option (nanopb_enumopt).long_names = false;
  SNS_INTERRUPT_PULL_TYPE_NO_PULL = 0;     
  SNS_INTERRUPT_PULL_TYPE_PULL_DOWN = 1;   
  SNS_INTERRUPT_PULL_TYPE_KEEPER = 2;      
  SNS_INTERRUPT_PULL_TYPE_PULL_UP = 3;     
}
message sns_interrupt_req
{
  required uint32 interrupt_num = 1;
  required sns_interrupt_trigger_type interrupt_trigger_type = 2;
  required sns_interrupt_drive_strength interrupt_drive_strength = 3;
  required sns_interrupt_pull_type interrupt_pull_type = 4;
  required bool is_chip_pin = 5;
}
message sns_ibi_req
{
  required uint32 dynamic_slave_addr = 1;
  required uint32 bus_instance = 2;
  required fixed32 ibi_data_bytes = 3;
}
message sns_interrupt_event
{
  required fixed32 interrupt_num = 1;
  required fixed64 timestamp = 2;
  optional bytes   ibi_data = 3 [(nanopb).max_size = 32];
}
